version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - 2181:2181
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - 9092:9092
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9006:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    depends_on:
      - kafka
  postgres:
    image: postgres:17
    container_name: postgres
    hostname: postgres
    env_file:
      - ./.env
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres/postgresql.conf:/postgresql.conf
    command: ["postgres", "-c", "config_file=/postgresql.conf"]
    ports:
      - 5432:5432

  debezium:
    image: quay.io/debezium/connect:3.0.7.Final 
    depends_on:
      - kafka
      - postgres
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: debezium_configs
      OFFSET_STORAGE_TOPIC: debezium_offsets
      STATUS_STORAGE_TOPIC: debezium_statuses
      CONNECT_PRODUCER_RETRIES: 5
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: false
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: false
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
    ports:
      - 8083:8083

  clickhouse:
    image: clickhouse/clickhouse-server:24.8-alpine
    container_name: clickhouse
    ports:
      - 8123:8123
      - 9000:9000
    volumes:
      - ./clickhouse/setup.sql:/docker-entrypoint-initdb.d/setup.sql
